函数 make_array(rows, cols) {
    arr = [];
    循环 i=0; i<rows; i=i+1 {
        row = [];
        循环 j=0; j<cols; j=j+1 {
            row = append(row, false);
        }
        arr = append(arr, row);
    }
    返回 arr;
}

函数 is_safe(board, row, col) {
    循环 i=0; i<col; i=i+1 {
        如果 board[row][i] {
            返回 false;
        }
    }
    i = row;
    j = col;
    当 i >= 0 {
        如果 j >= 0 {
            如果 board[i][j] {
                返回 false;
            }
        } 另外 {
            break;
        }
        i = i - 1;
        j = j - 1;
    }
    i = row;
    j = col;
    当 i < 8 {
        如果 j >= 0 {
            如果 board[i][j] {
                返回 false;
            }
        } 另外 {
            break;
        }
        i = i + 1;
        j = j - 1;
    }
    返回 true;
}

函数 solve_n_queens_util(board, col) {
    如果 col >= 8 {
        返回 true;
    }
    循环 i=0; i<8; i=i+1 {
        如果 is_safe(board, i, col) {
            board[i][col] = true;
            如果 solve_n_queens_util(board, col + 1) {
                返回 true;
            }
            board[i][col] = false;
        }
    }
    返回 false;
}

函数 solve_n_queens() {
    board = make_array(8, 8);
    如果 solve_n_queens_util(board, 0) {
        返回 board;
    } 另外 {
        返回 "no solution";
    }
}

solution = solve_n_queens();
打印("N-Queens Solution: ");
打印(solution);
