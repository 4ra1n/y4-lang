def max(a, b) {
    if a > b {
        return a;
    } else {
        return b;
    }
}

def make_array(rows, cols) {
    arr = [];
    for i=0; i<rows; i=i+1 {
        arr = append(arr,[]);
        for j=0; j<cols; j=j+1 {
            arr[i] = append(arr[i], 0);
        }
    }
    return arr;
}

def longest_common_subsequence(arr1, arr2) {
    len1 = length(arr1);
    len2 = length(arr2);
    lcs_matrix = make_array(len1+1, len2+1);
    for i=0; i<=len1; i=i+1 {
        lcs_matrix[i][0] = 0;
    }
    for j=0; j<=len2; j=j+1 {
        lcs_matrix[0][j] = 0;
    }
    for i=1; i<=len1; i=i+1 {
        for j=1; j<=len2; j=j+1 {
            if arr1[i-1] == arr2[j-1] {
                lcs_matrix[i][j] = lcs_matrix[i-1][j-1] + 1;
            } else {
                lcs_matrix[i][j] = max(lcs_matrix[i-1][j], lcs_matrix[i][j-1]);
            }
        }
    }
    return lcs_matrix[len1][len2];
}

arr1 = [1, 2, 3, 4, 5, 5, 5, 5];
arr2 = [2, 4, 5, 8, 10, 5, 6];
lcs_length = longest_common_subsequence(arr1, arr2);
print("length of longest common subsequence: " + lcs_length);
