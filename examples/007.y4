函数 make_array(size) {
    arr = [];
    循环 i=0; i<size; i=i+1 {
        arr = append(arr, 0);
    }
    返回 arr;
}

函数 max(a, b) {
    如果 a > b {
        返回 a;
    } 另外 {
        返回 b;
    }
}

函数 min(a, b) {
    如果 a < b {
        返回 a;
    } 另外 {
        返回 b;
    }
}

函数 trap(heights) {
    如果 长度(heights) == 0 {
        返回 0;
    }
    total_water = 0;
    len = 长度(heights);
    left_max = make_array(len);
    right_max = make_array(len);
    left_max[0] = heights[0];
    循环 i=1; i<len; i=i+1 {
        left_max[i] = max(left_max[i-1], heights[i]);
    }
    right_max[len-1] = heights[len-1];
    循环 i=len-2; i>=0; i=i-1 {
        right_max[i] = max(right_max[i+1], heights[i]);
    }
    循环 i=0; i<len; i=i+1 {
        water_at_i = min(left_max[i], right_max[i]) - heights[i];
        如果 water_at_i > 0 {
            total_water = total_water + water_at_i;
        }
    }
    返回 total_water;
}

// test the function
heights = [0, 2, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1];
trapped_water = trap(heights);
打印("trapped rainwater: " + trapped_water);
