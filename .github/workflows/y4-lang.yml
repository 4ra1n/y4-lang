name: y4-lang

on:

  push:
    branches: [ "master" ]

  workflow_dispatch:

jobs:

  docker:

    name: docker-test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: set up docker
        uses: docker/setup-buildx-action@v3

      - name: docker build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: y4lang:latest

  scan:

    name: git-leaks
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.6'

      - name: go test core
        run: |
          set -x
          cd test
          go test ./...

      - name: go test base
        run: |
          set -x
          cd base
          go test ./...

      - name: go test color
        run: |
          set -x
          cd color
          go test ./...

      - name: go test lexer
        run: |
          set -x
          cd lexer
          go test ./...

      - name: go test log
        run: |
          set -x
          cd log
          go test ./...

      - name: go test pool
        run: |
          set -x
          cd pool
          go test ./...

      - name: go test pre
        run: |
          set -x
          cd pre
          go test ./...

      - name: test examples
        run: |
          set -x
          chmod u+x test.sh
          ./test.sh

      - name: check gox
        run: |
          set -x
          cd gox
          go build -o test

      - name: check y4lang
        run: |
          set -x
          cd cmd
          go build -o test

  build:

    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:

      - name: set version
        run: echo "VERSION=v0.0.2" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - name: set up go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.6'

      - name: test examples
        run: |
          set -x
          chmod u+x test.sh
          ./test.sh

      - name: build gox
        run: |
          set -x
          cd gox
          go build -o ../cmd/my-gox

      - name: build y4-lang
        run: |
          set -x 
          cd cmd
          mkdir y4
          ./my-gox -parallel 5 -osarch="darwin/arm64 darwin/amd64 linux/386 linux/amd64 linux/arm linux/arm64 windows/arm windows/arm64 windows/386 windows/amd64" -ldflags="-extldflags=-static -s -w" -output="y4/y4lang_${{ env.VERSION }}_{{.OS}}_{{.Arch}}"

      - name: create build file
        run: |
          set -x
          cd cmd
          sudo apt-get install -y zip unzip
          sudo apt-get install -y upx
          find y4 -type f -exec sh -c '
            upx "$1" &&
            sha256sum "$1" > "$1_sha256.txt"
          ' sh {} \;
          zip -r ../build.zip y4/*

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip
